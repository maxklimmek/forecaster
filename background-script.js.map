{"mappings":"MAAA,IAAOA,E,IAAKC,KAAAD,MAAA,KACV,4BADUC,EAEV,wBAFUA,EAGV,wBAHUA,EAIV,oDAJUA,EAKV,wDALUA,EAMV,gCANUA,EAOV,wCCNF,MAAMC,EAAS,gCAOA,SAAAC,EACbC,EACAC,GAEA,MAAMC,EAAUC,OAAOC,QAAQC,cAAcH,QAC7C,MAAO,C,OAAEJ,E,OAAQE,E,QAAQC,E,QAASC,EACpC,CAEO,SAASI,EAAeC,GAC7B,MAAML,EAAUC,OAAOC,QAAQC,cAAcH,QAC7C,OAAOK,GAASC,SAAWV,GAAUS,GAASL,UAAYA,CAC5D,CCVA,MAAMO,EAAiBC,IACnB,MAAMC,EAASD,EAAIE,MAAM,KAAK,GAC9B,MAAO,CAAC,OAAQ,QAAS,OAAQ,MAAO,OAAOC,SAASF,EAAA,EAI5DR,OAAOH,OAAOc,UAAUC,aAAaC,IACjC,IAAKP,EAAcO,EAAIN,KAAO,CAE1B,MAAMA,EAAMP,OAAOC,QAAQa,OAAO,cAElC,OADAd,OAAOe,KAAKC,OAAO,CAAET,IAAK,GAAGA,oBAAuBU,QAAQ,KACrD,CACX,CACA,MAAMb,EAAUR,EAAeH,EAAcyB,cAC7ClB,OAAOe,KAAKI,YAAYN,EAAIO,GAAKhB,EAAA,IAIrCJ,OAAOC,QAAQoB,UAAUT,aAAY,CAACU,EAA8BC,EAAQC,KACnErB,EAAemB,GAIpBtB,OAAOe,KAAKI,YAAYI,EAAOV,IAAKO,GAAKE,GAHrCG,QAAQC,IAAI,sBAGyB,IAwC7C1B,OAAOC,QAAQ0B,YAAYf,aArCOgB,UAC9B,MAAMb,QAAaf,OAAOe,KAAKc,MAAM,CAAC,SAChCC,QAAQC,IAAIhB,EAAKiB,KAAInB,GAChB,IAAIiB,SAAcG,IACrB,IAAK3B,EAAcO,EAAIN,KACnB,OAAO0B,IAEX,MAAMX,EAAM1B,EAAeH,EAAcyC,oBACzClC,OAAOe,KAAKI,YAAYN,EAAIO,GAAKE,GAAKa,IAClCV,QAAQC,IAAI,C,SAAES,GAAYnC,OAAOC,QAAQmC,YACrCpC,OAAOC,QAAQmC,WAA0B,cAAbD,KAC5BV,QAAQC,IAAI,qDACZ1B,OAAOqC,UAAUC,cAAc,CAC3BC,OAAQ,CACJC,MAAO3B,EAAIO,IAEfqB,MAAO,CAAC,qBACRC,mBAAmB,IAEvB1C,OAAOqC,UAAUM,UAAU,CACvBJ,OAAQ,CACJC,MAAO3B,EAAIO,IAEfqB,MAAO,CAAC,wBAKhBR,GAAA,GACJ,MAGR,G","sources":["src/message-actions.ts","src/prepare-message.ts","src/background-script.ts"],"sourcesContent":["export enum MessageAction {\r\n  TOGGLE_POPUP = \"TOGGLE_POPUP\",\r\n  SHOW_POPUP = \"SHOW_POPUP\",\r\n  HIDE_POPUP = \"HIDE_POPUP\",\r\n  TOGGLE_VERTICAL_POSITION = \"TOGGLE_VERTICAL_POSITION\",\r\n  TOGGLE_HORIZONTAL_POSITION = \"TOGGLE_HORIZONTAL_POSITION\",\r\n  SET_MAX_HEIGHT = \"SET_MAX_HEIGHT\",\r\n  CHECK_INSTALLATION = \"CHECK_INSTALLATION\"\r\n}\r\n","import { MessageAction } from \"./message-actions\";\r\nconst source = \"__sales_discount_calculator__\";\r\nexport type ExtensionMessagePayload = {\r\n  action: MessageAction;\r\n  payload?: any;\r\n  source: typeof source;\r\n  version: string;\r\n};\r\nexport default function prepareMessage(\r\n  action: MessageAction,\r\n  payload?: any\r\n): ExtensionMessagePayload {\r\n  const version = chrome.runtime.getManifest().version;\r\n  return { source, action, payload, version };\r\n}\r\n\r\nexport function isValidMessage(message: any) {\r\n  const version = chrome.runtime.getManifest().version;\r\n  return message?.source === source && message?.version === version;\r\n}\r\n","import { MessageAction } from \"./message-actions\";\r\nimport prepareMessage, { ExtensionMessagePayload, isValidMessage } from \"./prepare-message\";\r\n\r\n\r\n/**\r\n * Check if the url is valid schema\r\n * Valid schema: http, https, file, ftp, urn\r\n * @param url \r\n */\r\nconst isValidSchema = (url: string) => {\r\n    const schema = url.split(\":\")[0];\r\n    return [\"http\", \"https\", \"file\", \"ftp\", \"urn\"].includes(schema);\r\n}\r\n\r\n// manage tab action icon click\r\nchrome.action.onClicked.addListener((tab) => {\r\n    if (!isValidSchema(tab.url!)) {\r\n        // open index.html\r\n        const url = chrome.runtime.getURL(\"index.html\");\r\n        chrome.tabs.create({ url: `${url}?standalone=true`, active: true });\r\n        return true;\r\n    }\r\n    const message = prepareMessage(MessageAction.TOGGLE_POPUP);\r\n    chrome.tabs.sendMessage(tab.id!, message);\r\n});\r\n\r\n\r\nchrome.runtime.onMessage.addListener((msg: ExtensionMessagePayload, sender, reply) => {\r\n    if (!isValidMessage(msg)) {\r\n        console.log(`Validation failed!!`);\r\n        return;\r\n    }\r\n    chrome.tabs.sendMessage(sender.tab!.id!, msg);\r\n});\r\n\r\nconst injectScriptIfNotInjected = async () => {\r\n    const tabs = await chrome.tabs.query({});\r\n    await Promise.all(tabs.map(tab => {\r\n        return new Promise<void>(resolve => {\r\n            if (!isValidSchema(tab.url!)) {\r\n                return resolve();\r\n            }\r\n            const msg = prepareMessage(MessageAction.CHECK_INSTALLATION);\r\n            chrome.tabs.sendMessage(tab.id!, msg, response => {\r\n                console.log({ response }, chrome.runtime.lastError);\r\n                if (chrome.runtime.lastError || response !== 'installed') {\r\n                    console.log(`Content script isn't installed, doing it manually`);\r\n                    chrome.scripting.executeScript({\r\n                        target: {\r\n                            tabId: tab.id!\r\n                        },\r\n                        files: ['content-script.js'],\r\n                        injectImmediately: true\r\n                    });\r\n                    chrome.scripting.insertCSS({\r\n                        target: {\r\n                            tabId: tab.id!\r\n                        },\r\n                        files: ['content-style.css'],\r\n\r\n                    })\r\n                }\r\n\r\n                resolve();\r\n            });\r\n\r\n        })\r\n    }))\r\n}\r\n\r\n// listen to on install or on update\r\n\r\nchrome.runtime.onInstalled.addListener(injectScriptIfNotInjected);\r\n\r\n\r\n\r\nexport { };\r\n\r\n"],"names":["$7452a5cb7a43a7c8$export$865c0eaaa43d90f8","MessageAction","$0b49b56a77d13354$var$source","$0b49b56a77d13354$export$2e2bcd8739ae039","action","payload","version","chrome","runtime","getManifest","$0b49b56a77d13354$export$f648e44869ab6afd","message","source","$ecfa9929ab60e83c$var$isValidSchema","url","schema","split","includes","onClicked","addListener","tab","getURL","tabs","create","active","TOGGLE_POPUP","sendMessage","id","onMessage","msg","sender","reply","console","log","onInstalled","async","query","Promise","all","map","resolve","CHECK_INSTALLATION","response","lastError","scripting","executeScript","target","tabId","files","injectImmediately","insertCSS"],"version":3,"file":"background-script.js.map"}